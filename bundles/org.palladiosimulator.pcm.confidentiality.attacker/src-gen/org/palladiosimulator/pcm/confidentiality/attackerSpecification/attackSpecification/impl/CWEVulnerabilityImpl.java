/**
 */
package org.palladiosimulator.pcm.confidentiality.attackerSpecification.attackSpecification.impl;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.palladiosimulator.pcm.confidentiality.attackerSpecification.attackSpecification.AttackSpecificationPackage;
import org.palladiosimulator.pcm.confidentiality.attackerSpecification.attackSpecification.CWEBasedVulnerability;
import org.palladiosimulator.pcm.confidentiality.attackerSpecification.attackSpecification.CWEID;
import org.palladiosimulator.pcm.confidentiality.attackerSpecification.attackSpecification.CWEVulnerability;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>CWE Vulnerability</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.palladiosimulator.pcm.confidentiality.attackerSpecification.attackSpecification.impl.CWEVulnerabilityImpl#getCweID <em>Cwe ID</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CWEVulnerabilityImpl extends VulnerabilityImpl implements CWEVulnerability
{
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CWEVulnerabilityImpl()
	{
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EClass eStaticClass()
	{
		return AttackSpecificationPackage.Literals.CWE_VULNERABILITY;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@SuppressWarnings("unchecked")
	public EList<CWEID> getCweID()
	{
		return (EList<CWEID>)eGet(AttackSpecificationPackage.Literals.CWE_BASED_VULNERABILITY__CWE_ID, true);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass)
	{
		if (baseClass == CWEBasedVulnerability.class)
		{
			switch (derivedFeatureID)
			{
				case AttackSpecificationPackage.CWE_VULNERABILITY__CWE_ID: return AttackSpecificationPackage.CWE_BASED_VULNERABILITY__CWE_ID;
				default: return -1;
			}
		}
		return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass)
	{
		if (baseClass == CWEBasedVulnerability.class)
		{
			switch (baseFeatureID)
			{
				case AttackSpecificationPackage.CWE_BASED_VULNERABILITY__CWE_ID: return AttackSpecificationPackage.CWE_VULNERABILITY__CWE_ID;
				default: return -1;
			}
		}
		return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
	}

} //CWEVulnerabilityImpl
